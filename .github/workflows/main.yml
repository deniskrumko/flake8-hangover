name: tests

on: [push, pull_request, workflow_dispatch]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: [3.8, 3.9, '3.10', '3.11-dev']
    steps:
    - uses: actions/checkout@v3
    - name: python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      id: python
      with:
        python-version: ${{ matrix.python-version }}
        cache: pipenv
    - name: pipenv
      run: python -m pip install pipenv
    - name: dependencies
      if: steps.python.outputs.cache-hit != 'true'
      run: pipenv install --deploy --dev --python ${{ matrix.python-version }}
    - name: flake8
      run: pipenv run flake8 .
    - name: mypy
      run: pipenv run mypy .
    - name: pytest
      run: PYTHONPATH=. pipenv run pytest --cov --cov-report=term-missing

  release:
    needs:
      - tests
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: python setup
        uses: actions/setup-python@v4
        id: python
        with:
          python-version: '3.10'
          cache: pipenv
      - name: pipenv
        run: python -m pip install pipenv
      - name: Install dependencies
        if: steps.python.outputs.cache-hit != 'true'
        run: pipenv install --deploy --dev
      - name: Install twine
        run: pipenv run pip install twine
      - name: Build package
        run: pipenv run python setup.py sdist bdist_wheel
      - name: Upload
        run: pipenv run twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
